From dd9f6fea11cd02e5056a7ba0ca7a8bc7f1b12b1d Mon Sep 17 00:00:00 2001
From: Joakim Haugen <joakim.haugen@sintef.no>
Date: Mon, 6 Feb 2023 16:11:35 +0100
Subject: [PATCH] tweak idlcxx_generate

---
 src/idlcxx/Generate.cmake | 30 +++++++++++++++++++++++++++---
 1 file changed, 27 insertions(+), 3 deletions(-)

diff --git a/src/idlcxx/Generate.cmake b/src/idlcxx/Generate.cmake
index 0bc6ec8..6445626 100644
--- a/src/idlcxx/Generate.cmake
+++ b/src/idlcxx/Generate.cmake
@@ -11,7 +11,7 @@
 #
 
 function(IDLCXX_GENERATE)
-  set(one_value_keywords TARGET DEFAULT_EXTENSIBILITY)
+  set(one_value_keywords TARGET DEFAULT_EXTENSIBILITY BASE_DIR)
   set(multi_value_keywords FILES FEATURES INCLUDES WARNINGS)
   cmake_parse_arguments(
     IDLCXX "" "${one_value_keywords}" "${multi_value_keywords}" "" ${ARGN})
@@ -28,8 +28,31 @@ function(IDLCXX_GENERATE)
       message(FATAL_ERROR "Cannot find idlcxx shared library")
     endif()
   else()
-    set(_idlcxx_shared_lib "$<TARGET_FILE:CycloneDDS-CXX::idlcxx>")
-    set(_idlcxx_depends CycloneDDS-CXX::idlcxx)
+
+    get_target_property(_is_imported CycloneDDS-CXX::idlcxx INTERFACE_LINK_DIRECTORIES)
+
+    if(_is_imported)
+      # TODO: there must be a better way than this
+      get_target_property(_idlcxx_dir CycloneDDS-CXX::idlcxx INTERFACE_LINK_DIRECTORIES)
+      if(WIN32)
+        get_filename_component(_idlcxx_shared_lib "${_idlcxx_dir}/../bin/cycloneddsidlcxx.dll" ABSOLUTE)
+      else()
+        find_library(_idlcxx_shared_lib cycloneddsidlcxx ${_idlcxx_dir} NO_DEFAULT_PATH)
+      endif()
+      set(_idlcxx_depends "")
+    else()
+      set(_idlcxx_shared_lib "$<TARGET_FILE:CycloneDDS-CXX::idlcxx>")
+      set(_idlcxx_depends CycloneDDS-CXX::idlcxx)
+    endif()
+  endif()
+
+
+  if(CycloneDDS_VERSION VERSION_LESS "0.10.0")
+    unset(_with_base_dir)
+  else()
+    if(IDLCXX_BASE_DIR)
+      set(_with_base_dir BASE_DIR ${IDLCXX_BASE_DIR})
+    endif()
   endif()
 
   idlc_generate_generic(TARGET ${IDLCXX_TARGET}
@@ -41,6 +64,7 @@ function(IDLCXX_GENERATE)
     DEFAULT_EXTENSIBILITY ${IDLCXX_DEFAULT_EXTENSIBILITY}
     SUFFIXES .hpp .cpp
     DEPENDS ${_idlcxx_depends}
+    ${_with_base_dir}
   )
   if(CYCLONEDDS_CXX_ENABLE_LEGACY)
       target_include_directories(${IDLCXX_TARGET}
-- 
2.30.2

